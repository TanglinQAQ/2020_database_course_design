{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport global_msg from '../utils/global.js';\nimport { adduser } from '@/api/login.js';\nimport { isUseruni } from '@/api/login.js';\nexport default {\n  name: 'AddUser',\n\n  data() {\n    var nameunique = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请输入您的用户名'));\n      } else {\n        let params = {\n          user_id: value\n        };\n        isUseruni(params).then(function (res) {\n          if (res.data === false) {\n            callback(new Error('此用户名已经被使用过'));\n          } else {\n            callback();\n          }\n        });\n      }\n    };\n\n    var validatePass = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请输入密码'));\n      } else {\n        if (this.ruleForm.checkPass !== '') {\n          this.$refs.ruleForm.validateField('checkPass');\n        }\n\n        callback();\n      }\n    };\n\n    var validatePass2 = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请再次输入密码'));\n      } else if (value !== this.ruleForm.pass) {\n        callback(new Error('两次输入密码不一致!'));\n      } else {\n        callback();\n      }\n    };\n\n    return {\n      ruleForm: {\n        user_name: '',\n        pass: '',\n        checkPass: '',\n        age: '',\n        //0是女生，1是男生\n        gender: '',\n        contact_info: '',\n        institution: '',\n        major: '',\n        introduction: ''\n      },\n      rules: {\n        user_name: [{\n          required: true,\n          message: '请输入您的用户名',\n          trigger: 'blur'\n        }, {\n          min: 2,\n          max: 18,\n          message: '长度在 2 到 18 个字符',\n          trigger: 'blur'\n        }, {\n          validator: nameunique,\n          trigger: 'blur'\n        }],\n        pass: [{\n          validator: validatePass,\n          trigger: 'blur'\n        }],\n        checkPass: [{\n          validator: validatePass2,\n          trigger: 'blur'\n        }],\n        gender: [{\n          required: true,\n          message: '请选择性別',\n          trigger: 'change'\n        }],\n        institution: [{\n          required: true,\n          message: '请输入您所在的学院',\n          trigger: 'blur'\n        }, {\n          min: 3,\n          max: 5,\n          message: '长度在 3 到 5 个字符',\n          trigger: 'blur'\n        }],\n        major: [{\n          required: true,\n          message: '请输入您的专业',\n          trigger: 'blur'\n        }, {\n          min: 3,\n          max: 5,\n          message: '长度在 3 到 5 个字符',\n          trigger: 'blur'\n        }],\n        introduction: [{\n          required: true,\n          message: '请输入您的自我介绍',\n          trigger: 'blur'\n        }, {\n          min: 3,\n          max: 100,\n          message: '长度在 3 到 100 个字符',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n\n  methods: {\n    goback() {\n      this.$router.push({\n        path: \"/login\"\n      }); //返回\n    },\n\n    submitForm(formName) {\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          console.log('submit!');\n        } else {\n          console.log('error submit!!');\n          return false;\n        }\n      });\n      let vm = this;\n      let param = {\n        user_id: this.ruleForm.user_name,\n        //把用户id和用户名都设成用户名\n        password: this.ruleForm.pass,\n        user_name: this.ruleForm.user_name,\n        gender: this.ruleForm.gender,\n        contact_info: this.ruleForm.contact_info,\n        institution: this.ruleForm.institution,\n        major: this.ruleForm.major,\n        introduction: this.ruleForm.introduction\n      };\n      adduser(param).then(function (res) {\n        if (res.data === false) {\n          vm.$message.error(\"提交失败\");\n          vm.resetForm(formName);\n        } else {\n          vm.$message.success(\"提交成功\");\n          vm.$router.push({\n            path: \"/login\"\n          }); //接下来进入到哪个路由\n        }\n      });\n    },\n\n    resetForm(formName) {\n      this.$refs[formName].resetFields();\n    }\n\n  }\n};","map":{"version":3,"mappings":";AAyDA;AACA;AACA;AACA;EACAA,eADA;;EAEAC;IACA;MACA;QACAC;MACA,CAFA,MAEA;QACA;UACAC;QADA;QAGAC;UACA;YACAF;UACA,CAFA,MAEA;YACAA;UACA;QACA,CANA;MAOA;IACA,CAfA;;IAgBA;MACA;QACAA;MACA,CAFA,MAEA;QACA;UACA;QACA;;QACAA;MACA;IACA,CATA;;IAUA;MACA;QACAA;MACA,CAFA,MAEA;QACAA;MACA,CAFA,MAEA;QACAA;MACA;IACA,CARA;;IASA;MACAG;QACAC,aADA;QAEAC,QAFA;QAGAC,aAHA;QAIAC,OAJA;QAIA;QACAC,UALA;QAMAC,gBANA;QAOAC,eAPA;QAQAC,SARA;QASAC;MATA,CADA;MAYAC;QACAT,YACA;UAAAU;UAAAC;UAAAC;QAAA,CADA,EAEA;UAAAC;UAAAC;UAAAH;UAAAC;QAAA,CAFA,EAGA;UAAAG;UAAAH;QAAA,CAHA,CADA;QAMAX,OACA;UAAAc;UAAAH;QAAA,CADA,CANA;QASAV,YACA;UAAAa;UAAAH;QAAA,CADA,CATA;QAYAR,SACA;UAAAM;UAAAC;UAAAC;QAAA,CADA,CAZA;QAeAN,cACA;UAAAI;UAAAC;UAAAC;QAAA,CADA,EAEA;UAAAC;UAAAC;UAAAH;UAAAC;QAAA,CAFA,CAfA;QAmBAL,QACA;UAAAG;UAAAC;UAAAC;QAAA,CADA,EAEA;UAAAC;UAAAC;UAAAH;UAAAC;QAAA,CAFA,CAnBA;QAuBAJ,eACA;UAAAE;UAAAC;UAAAC;QAAA,CADA,EAEA;UAAAC;UAAAC;UAAAH;UAAAC;QAAA,CAFA;MAvBA;IAZA;EAyCA,CA/EA;;EAgFAI;IACAC;MACA;QAAAC;MAAA,GADA,CACA;IACA,CAHA;;IAIAC;MACA;QACA;UACAC;QACA,CAFA,MAEA;UACAA;UACA;QACA;MACA,CAPA;MAQA;MACA;QACAvB,gCADA;QACA;QACAwB,4BAFA;QAGArB,kCAHA;QAIAI,4BAJA;QAKAC,wCALA;QAMAC,sCANA;QAOAC,0BAPA;QAQAC;MARA;MAUAc;QACA;UACAC;UACAA;QACA,CAHA,MAGA;UACAA;UACAA;YAAAL;UAAA,GAFA,CAEA;QACA;MACA,CARA;IASA,CAjCA;;IAkCAM;MACA;IACA;;EApCA;AAhFA","names":["name","data","callback","user_id","isUseruni","ruleForm","user_name","pass","checkPass","age","gender","contact_info","institution","major","introduction","rules","required","message","trigger","min","max","validator","methods","goback","path","submitForm","console","password","adduser","vm","resetForm"],"sourceRoot":"src/view","sources":["AddUser.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <el-header>\r\n            <span class=\"container\" @click=\"goback\">\r\n                <div class=\"button-wrapper\">\r\n                    <svg width=\"120\" height=\"42\">\r\n                        <rect class=\"rectangle\" width=\"120\" height=\"42\" />\r\n                    </svg>\r\n                    <div class=\"btn\">\r\n                        返回\r\n                    </div>\r\n                </div>\r\n            </span>用户注册\r\n        </el-header>\r\n        <el-main>\r\n            <el-form :model=\"ruleForm\" :rules=\"rules\" ref=\"ruleForm\" label-width=\"100px\" class=\"demo-ruleForm\">\r\n                <el-form-item label=\"名称\" prop=\"user_name\">\r\n                    <el-input v-model=\"ruleForm.user_name\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"密码\" prop=\"pass\">\r\n                    <el-input type=\"password\" v-model=\"ruleForm.pass\" autocomplete=\"off\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"确认密码\" prop=\"checkPass\">\r\n                    <el-input type=\"password\" v-model=\"ruleForm.checkPass\" autocomplete=\"off\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"性别\" prop=\"gender\">\r\n                    <el-select v-model=\"ruleForm.gender\" placeholder=\"请选择您的性別\">\r\n                        <el-option label=\"女\" value='0'></el-option>\r\n                        <el-option label=\"男\" value=\"1\"></el-option>\r\n                    </el-select>\r\n                </el-form-item>\r\n                <el-form-item prop=\"contact_info\" label=\"邮箱\" :rules=\"[\r\n                    { required: true, message: '请输入邮箱地址', trigger: 'blur' },\r\n                    { type: 'email', message: '请输入正确的邮箱地址', trigger: ['blur', 'change'] }\r\n                ]\">\r\n                    <el-input v-model=\"ruleForm.contact_info\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"所在学院\" prop=\"institution\">\r\n                    <el-input v-model=\"ruleForm.institution\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"专业\" prop=\"major\">\r\n                    <el-input v-model=\"ruleForm.major\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"自我介绍\" prop=\"introduction\">\r\n                    <el-input type=\"textarea\" v-model=\"ruleForm.introduction\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item>\r\n                    <el-button type=\"primary\" @click=\"submitForm('ruleForm')\">提交</el-button>\r\n                    <el-button @click=\"resetForm('ruleForm')\">重置</el-button>\r\n                </el-form-item>\r\n            </el-form>\r\n        </el-main>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport global_msg from '../utils/global.js'\r\nimport { adduser } from '@/api/login.js'\r\nimport { isUseruni } from '@/api/login.js'\r\nexport default {\r\n    name: 'AddUser',\r\n    data() {\r\n        var nameunique = (rule, value, callback) => {\r\n            if (value === '') {\r\n                callback(new Error('请输入您的用户名'));\r\n            } else {\r\n                let params = {\r\n                    user_id: value,\r\n                }\r\n                isUseruni(params).then(function (res) {\r\n                    if (res.data === false) {\r\n                        callback(new Error('此用户名已经被使用过'));\r\n                    } else {\r\n                        callback();\r\n                    }\r\n                })\r\n            }\r\n        };\r\n        var validatePass = (rule, value, callback) => {\r\n            if (value === '') {\r\n                callback(new Error('请输入密码'));\r\n            } else {\r\n                if (this.ruleForm.checkPass !== '') {\r\n                    this.$refs.ruleForm.validateField('checkPass');\r\n                }\r\n                callback();\r\n            }\r\n        };\r\n        var validatePass2 = (rule, value, callback) => {\r\n            if (value === '') {\r\n                callback(new Error('请再次输入密码'));\r\n            } else if (value !== this.ruleForm.pass) {\r\n                callback(new Error('两次输入密码不一致!'));\r\n            } else {\r\n                callback();\r\n            }\r\n        };\r\n        return {\r\n            ruleForm: {\r\n                user_name: '',\r\n                pass: '',\r\n                checkPass: '',\r\n                age: '', //0是女生，1是男生\r\n                gender: '',\r\n                contact_info: '',\r\n                institution: '',\r\n                major: '',\r\n                introduction: '',\r\n            },\r\n            rules: {\r\n                user_name: [\r\n                    { required: true, message: '请输入您的用户名', trigger: 'blur' },\r\n                    { min: 2, max: 18, message: '长度在 2 到 18 个字符', trigger: 'blur' },\r\n                    { validator: nameunique, trigger: 'blur' }\r\n                ],\r\n                pass: [\r\n                    { validator: validatePass, trigger: 'blur' }\r\n                ],\r\n                checkPass: [\r\n                    { validator: validatePass2, trigger: 'blur' }\r\n                ],\r\n                gender: [\r\n                    { required: true, message: '请选择性別', trigger: 'change' }\r\n                ],\r\n                institution: [\r\n                    { required: true, message: '请输入您所在的学院', trigger: 'blur' },\r\n                    { min: 3, max: 5, message: '长度在 3 到 5 个字符', trigger: 'blur' }\r\n                ],\r\n                major: [\r\n                    { required: true, message: '请输入您的专业', trigger: 'blur' },\r\n                    { min: 3, max: 5, message: '长度在 3 到 5 个字符', trigger: 'blur' }\r\n                ],\r\n                introduction: [\r\n                    { required: true, message: '请输入您的自我介绍', trigger: 'blur' },\r\n                    { min: 3, max: 100, message: '长度在 3 到 100 个字符', trigger: 'blur' }\r\n                ]\r\n            }\r\n        };\r\n    },\r\n    methods: {\r\n        goback() {\r\n            this.$router.push({ path: \"/login\" }); //返回\r\n        },\r\n        submitForm(formName) {\r\n            this.$refs[formName].validate((valid) => {\r\n                if (valid) {\r\n                    console.log('submit!');\r\n                } else {\r\n                    console.log('error submit!!');\r\n                    return false;\r\n                }\r\n            });\r\n            let vm = this;\r\n            let param = {\r\n                user_id: this.ruleForm.user_name,//把用户id和用户名都设成用户名\r\n                password: this.ruleForm.pass,\r\n                user_name: this.ruleForm.user_name,\r\n                gender: this.ruleForm.gender,\r\n                contact_info: this.ruleForm.contact_info,\r\n                institution: this.ruleForm.institution,\r\n                major: this.ruleForm.major,\r\n                introduction: this.ruleForm.introduction\r\n            }\r\n            adduser(param).then(function (res) {\r\n                if (res.data === false) {\r\n                    vm.$message.error(\"提交失败\");\r\n                    vm.resetForm(formName);\r\n                } else {\r\n                    vm.$message.success(\"提交成功\");\r\n                    vm.$router.push({ path: \"/login\" }); //接下来进入到哪个路由\r\n                }\r\n            })\r\n        },\r\n        resetForm(formName) {\r\n            this.$refs[formName].resetFields();\r\n        }\r\n    }\r\n}\r\n</script>\r\n<style scoped>\r\n.el-header,\r\n.el-footer {\r\n    font-weight: 900;\r\n    font-size: 24px;\r\n    background-color: #B3C0D1;\r\n    color: #333;\r\n    text-align: center;\r\n    line-height: 60px;\r\n}\r\n\r\n.el-main {\r\n    background-color: #ecf0f5;\r\n    color: #333;\r\n    text-align: left;\r\n    line-height: 220px;\r\n    height: 100%;\r\n}\r\n\r\n#home {\r\n    width: 100%;\r\n    min-height: 100vh;\r\n    background-color: #ecf0f5;\r\n    background-size: 100% 100%;\r\n}\r\n\r\n.demo-ruleForm>>>.el-form-item__label\r\n\r\n/*标题的字体大小 */\r\n    {\r\n    font-size: 18px;\r\n}\r\n\r\n.container {\r\n    display: inline;\r\n    float: left;\r\n    display: inline-block;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    width: 40px;\r\n    height: 48px;\r\n}\r\n\r\n.button-wrapper {\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 60px;\r\n    height: 30px;\r\n    text-align: center;\r\n}\r\n\r\n.rectangle {\r\n    stroke-width: 8px;\r\n    stroke: #ecf0f5;\r\n    fill: transparent;\r\n    /* Core part of the animation */\r\n    stroke-dasharray: 200 500;\r\n    stroke-dashoffset: -372;\r\n    /* 偏移负数，虚线整体右移动了372个单位 */\r\n}\r\n\r\n.btn {\r\n    color: white;\r\n    font-size: 24px;\r\n    letter-spacing: 6px;\r\n    position: relative;\r\n    top: -72px;\r\n    left: 30px;\r\n}\r\n\r\n@keyframes extend {\r\n    to {\r\n        stroke-dasharray: 600;\r\n        /* 属性用于创建虚线： */\r\n        stroke-dashoffset: 0;\r\n        stroke-width: 4;\r\n        /* 属性定义了一条线，文本或元素轮廓厚度： */\r\n    }\r\n}\r\n\r\n.button-wrapper:hover .rectangle {\r\n    animation: 0.5s extend linear forwards;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}