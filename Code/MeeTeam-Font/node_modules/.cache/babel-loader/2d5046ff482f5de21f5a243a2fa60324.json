{"ast":null,"code":"export function newMessages() {\n  return {\n    'default': 'Validation error on field %s',\n    required: '%s is required',\n    'enum': '%s must be one of %s',\n    whitespace: '%s cannot be empty',\n    date: {\n      format: '%s date %s is invalid for format %s',\n      parse: '%s date could not be parsed, %s is invalid ',\n      invalid: '%s date %s is invalid'\n    },\n    types: {\n      string: '%s is not a %s',\n      method: '%s is not a %s (function)',\n      array: '%s is not an %s',\n      object: '%s is not an %s',\n      number: '%s is not a %s',\n      date: '%s is not a %s',\n      boolean: '%s is not a %s',\n      integer: '%s is not an %s',\n      float: '%s is not a %s',\n      regexp: '%s is not a valid %s',\n      email: '%s is not a valid %s',\n      url: '%s is not a valid %s',\n      hex: '%s is not a valid %s'\n    },\n    string: {\n      len: '%s must be exactly %s characters',\n      min: '%s must be at least %s characters',\n      max: '%s cannot be longer than %s characters',\n      range: '%s must be between %s and %s characters'\n    },\n    number: {\n      len: '%s must equal %s',\n      min: '%s cannot be less than %s',\n      max: '%s cannot be greater than %s',\n      range: '%s must be between %s and %s'\n    },\n    array: {\n      len: '%s must be exactly %s in length',\n      min: '%s cannot be less than %s in length',\n      max: '%s cannot be greater than %s in length',\n      range: '%s must be between %s and %s in length'\n    },\n    pattern: {\n      mismatch: '%s value %s does not match pattern %s'\n    },\n    clone: function clone() {\n      var cloned = JSON.parse(JSON.stringify(this));\n      cloned.clone = this.clone;\n      return cloned;\n    }\n  };\n}\nexport var messages = newMessages();","map":{"version":3,"names":["newMessages","required","whitespace","date","format","parse","invalid","types","string","method","array","object","number","boolean","integer","float","regexp","email","url","hex","len","min","max","range","pattern","mismatch","clone","cloned","JSON","stringify","messages"],"sources":["C:/Users/中野/Desktop/2020_database_course_design/Code/MeeTeam-Font/node_modules/async-validator/es/messages.js"],"sourcesContent":["export function newMessages() {\n  return {\n    'default': 'Validation error on field %s',\n    required: '%s is required',\n    'enum': '%s must be one of %s',\n    whitespace: '%s cannot be empty',\n    date: {\n      format: '%s date %s is invalid for format %s',\n      parse: '%s date could not be parsed, %s is invalid ',\n      invalid: '%s date %s is invalid'\n    },\n    types: {\n      string: '%s is not a %s',\n      method: '%s is not a %s (function)',\n      array: '%s is not an %s',\n      object: '%s is not an %s',\n      number: '%s is not a %s',\n      date: '%s is not a %s',\n      boolean: '%s is not a %s',\n      integer: '%s is not an %s',\n      float: '%s is not a %s',\n      regexp: '%s is not a valid %s',\n      email: '%s is not a valid %s',\n      url: '%s is not a valid %s',\n      hex: '%s is not a valid %s'\n    },\n    string: {\n      len: '%s must be exactly %s characters',\n      min: '%s must be at least %s characters',\n      max: '%s cannot be longer than %s characters',\n      range: '%s must be between %s and %s characters'\n    },\n    number: {\n      len: '%s must equal %s',\n      min: '%s cannot be less than %s',\n      max: '%s cannot be greater than %s',\n      range: '%s must be between %s and %s'\n    },\n    array: {\n      len: '%s must be exactly %s in length',\n      min: '%s cannot be less than %s in length',\n      max: '%s cannot be greater than %s in length',\n      range: '%s must be between %s and %s in length'\n    },\n    pattern: {\n      mismatch: '%s value %s does not match pattern %s'\n    },\n    clone: function clone() {\n      var cloned = JSON.parse(JSON.stringify(this));\n      cloned.clone = this.clone;\n      return cloned;\n    }\n  };\n}\n\nexport var messages = newMessages();"],"mappings":"AAAA,OAAO,SAASA,WAAT,GAAuB;EAC5B,OAAO;IACL,WAAW,8BADN;IAELC,QAAQ,EAAE,gBAFL;IAGL,QAAQ,sBAHH;IAILC,UAAU,EAAE,oBAJP;IAKLC,IAAI,EAAE;MACJC,MAAM,EAAE,qCADJ;MAEJC,KAAK,EAAE,6CAFH;MAGJC,OAAO,EAAE;IAHL,CALD;IAULC,KAAK,EAAE;MACLC,MAAM,EAAE,gBADH;MAELC,MAAM,EAAE,2BAFH;MAGLC,KAAK,EAAE,iBAHF;MAILC,MAAM,EAAE,iBAJH;MAKLC,MAAM,EAAE,gBALH;MAMLT,IAAI,EAAE,gBAND;MAOLU,OAAO,EAAE,gBAPJ;MAQLC,OAAO,EAAE,iBARJ;MASLC,KAAK,EAAE,gBATF;MAULC,MAAM,EAAE,sBAVH;MAWLC,KAAK,EAAE,sBAXF;MAYLC,GAAG,EAAE,sBAZA;MAaLC,GAAG,EAAE;IAbA,CAVF;IAyBLX,MAAM,EAAE;MACNY,GAAG,EAAE,kCADC;MAENC,GAAG,EAAE,mCAFC;MAGNC,GAAG,EAAE,wCAHC;MAINC,KAAK,EAAE;IAJD,CAzBH;IA+BLX,MAAM,EAAE;MACNQ,GAAG,EAAE,kBADC;MAENC,GAAG,EAAE,2BAFC;MAGNC,GAAG,EAAE,8BAHC;MAINC,KAAK,EAAE;IAJD,CA/BH;IAqCLb,KAAK,EAAE;MACLU,GAAG,EAAE,iCADA;MAELC,GAAG,EAAE,qCAFA;MAGLC,GAAG,EAAE,wCAHA;MAILC,KAAK,EAAE;IAJF,CArCF;IA2CLC,OAAO,EAAE;MACPC,QAAQ,EAAE;IADH,CA3CJ;IA8CLC,KAAK,EAAE,SAASA,KAAT,GAAiB;MACtB,IAAIC,MAAM,GAAGC,IAAI,CAACvB,KAAL,CAAWuB,IAAI,CAACC,SAAL,CAAe,IAAf,CAAX,CAAb;MACAF,MAAM,CAACD,KAAP,GAAe,KAAKA,KAApB;MACA,OAAOC,MAAP;IACD;EAlDI,CAAP;AAoDD;AAED,OAAO,IAAIG,QAAQ,GAAG9B,WAAW,EAA1B"},"metadata":{},"sourceType":"module"}