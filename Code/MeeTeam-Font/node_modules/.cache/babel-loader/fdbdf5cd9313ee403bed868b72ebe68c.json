{"ast":null,"code":"'use strict';\n\nrequire(\"core-js/modules/web.dom-exception.stack.js\");\n\nvar utils = require('./../utils');\n\nvar settle = require('./../core/settle');\n\nvar cookies = require('./../helpers/cookies');\n\nvar buildURL = require('./../helpers/buildURL');\n\nvar buildFullPath = require('../core/buildFullPath');\n\nvar parseHeaders = require('./../helpers/parseHeaders');\n\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\n\nvar createError = require('../core/createError');\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest(); // HTTP basic authentication\n\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    var fullPath = buildFullPath(config.baseURL, config.url);\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true); // Set the request timeout in MS\n\n    request.timeout = config.timeout; // Listen for ready state\n\n    request.onreadystatechange = function handleLoad() {\n      if (!request || request.readyState !== 4) {\n        return;\n      } // The request errored out and we didn't get a response, this will be\n      // handled by onerror instead\n      // With one exception: request that using file: protocol, most browsers\n      // will return status as 0 even though it's a successful request\n\n\n      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n        return;\n      } // Prepare the response\n\n\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;\n      var response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n      settle(resolve, reject, response); // Clean up request\n\n      request = null;\n    }; // Handle browser request cancellation (as opposed to a manual cancellation)\n\n\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(createError('Request aborted', config, 'ECONNABORTED', request)); // Clean up request\n\n      request = null;\n    }; // Handle low level network errors\n\n\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config, null, request)); // Clean up request\n\n      request = null;\n    }; // Handle timeout\n\n\n    request.ontimeout = function handleTimeout() {\n      var timeoutErrorMessage = 'timeout of ' + config.timeout + 'ms exceeded';\n\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n\n      reject(createError(timeoutErrorMessage, config, 'ECONNABORTED', request)); // Clean up request\n\n      request = null;\n    }; // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n\n\n    if (utils.isStandardBrowserEnv()) {\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ? cookies.read(config.xsrfCookieName) : undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    } // Add headers to the request\n\n\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    } // Add withCredentials to request if needed\n\n\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    } // Add responseType to request if needed\n\n\n    if (config.responseType) {\n      try {\n        request.responseType = config.responseType;\n      } catch (e) {\n        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.\n        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.\n        if (config.responseType !== 'json') {\n          throw e;\n        }\n      }\n    } // Handle progress if needed\n\n\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    } // Not all browsers support upload events\n\n\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken) {\n      // Handle cancellation\n      config.cancelToken.promise.then(function onCanceled(cancel) {\n        if (!request) {\n          return;\n        }\n\n        request.abort();\n        reject(cancel); // Clean up request\n\n        request = null;\n      });\n    }\n\n    if (!requestData) {\n      requestData = null;\n    } // Send the request\n\n\n    request.send(requestData);\n  });\n};","map":{"version":3,"names":["utils","require","settle","cookies","buildURL","buildFullPath","parseHeaders","isURLSameOrigin","createError","module","exports","xhrAdapter","config","Promise","dispatchXhrRequest","resolve","reject","requestData","data","requestHeaders","headers","isFormData","request","XMLHttpRequest","auth","username","password","unescape","encodeURIComponent","Authorization","btoa","fullPath","baseURL","url","open","method","toUpperCase","params","paramsSerializer","timeout","onreadystatechange","handleLoad","readyState","status","responseURL","indexOf","responseHeaders","getAllResponseHeaders","responseData","responseType","responseText","response","statusText","onabort","handleAbort","onerror","handleError","ontimeout","handleTimeout","timeoutErrorMessage","isStandardBrowserEnv","xsrfValue","withCredentials","xsrfCookieName","read","undefined","xsrfHeaderName","forEach","setRequestHeader","val","key","toLowerCase","isUndefined","e","onDownloadProgress","addEventListener","onUploadProgress","upload","cancelToken","promise","then","onCanceled","cancel","abort","send"],"sources":["C:/Users/中野/Desktop/2020_database_course_design/Code/MeeTeam-Font/node_modules/axios/lib/adapters/xhr.js"],"sourcesContent":["'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar cookies = require('./../helpers/cookies');\nvar buildURL = require('./../helpers/buildURL');\nvar buildFullPath = require('../core/buildFullPath');\nvar parseHeaders = require('./../helpers/parseHeaders');\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\nvar createError = require('../core/createError');\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    var fullPath = buildFullPath(config.baseURL, config.url);\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    // Listen for ready state\n    request.onreadystatechange = function handleLoad() {\n      if (!request || request.readyState !== 4) {\n        return;\n      }\n\n      // The request errored out and we didn't get a response, this will be\n      // handled by onerror instead\n      // With one exception: request that using file: protocol, most browsers\n      // will return status as 0 even though it's a successful request\n      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n        return;\n      }\n\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;\n      var response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(resolve, reject, response);\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(createError('Request aborted', config, 'ECONNABORTED', request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config, null, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      var timeoutErrorMessage = 'timeout of ' + config.timeout + 'ms exceeded';\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(createError(timeoutErrorMessage, config, 'ECONNABORTED',\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?\n        cookies.read(config.xsrfCookieName) :\n        undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (config.responseType) {\n      try {\n        request.responseType = config.responseType;\n      } catch (e) {\n        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.\n        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.\n        if (config.responseType !== 'json') {\n          throw e;\n        }\n      }\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken) {\n      // Handle cancellation\n      config.cancelToken.promise.then(function onCanceled(cancel) {\n        if (!request) {\n          return;\n        }\n\n        request.abort();\n        reject(cancel);\n        // Clean up request\n        request = null;\n      });\n    }\n\n    if (!requestData) {\n      requestData = null;\n    }\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}