{"ast":null,"code":"import * as util from '../util';\n/**\n *  Rule for validating whitespace.\n *\n *  @param rule The validation rule.\n *  @param value The value of the field on the source object.\n *  @param source The source object being validated.\n *  @param errors An array of errors that this rule may add\n *  validation errors to.\n *  @param options The validation options.\n *  @param options.messages The validation messages.\n */\n\nfunction whitespace(rule, value, source, errors, options) {\n  if (/^\\s+$/.test(value) || value === '') {\n    errors.push(util.format(options.messages.whitespace, rule.fullField));\n  }\n}\n\nexport default whitespace;","map":{"version":3,"names":["util","whitespace","rule","value","source","errors","options","test","push","format","messages","fullField"],"sources":["C:/Users/中野/Desktop/2020_database_course_design/Code/MeeTeam-Font/node_modules/async-validator/es/rule/whitespace.js"],"sourcesContent":["import * as util from '../util';\n\n/**\n *  Rule for validating whitespace.\n *\n *  @param rule The validation rule.\n *  @param value The value of the field on the source object.\n *  @param source The source object being validated.\n *  @param errors An array of errors that this rule may add\n *  validation errors to.\n *  @param options The validation options.\n *  @param options.messages The validation messages.\n */\nfunction whitespace(rule, value, source, errors, options) {\n  if (/^\\s+$/.test(value) || value === '') {\n    errors.push(util.format(options.messages.whitespace, rule.fullField));\n  }\n}\n\nexport default whitespace;"],"mappings":"AAAA,OAAO,KAAKA,IAAZ,MAAsB,SAAtB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,UAAT,CAAoBC,IAApB,EAA0BC,KAA1B,EAAiCC,MAAjC,EAAyCC,MAAzC,EAAiDC,OAAjD,EAA0D;EACxD,IAAI,QAAQC,IAAR,CAAaJ,KAAb,KAAuBA,KAAK,KAAK,EAArC,EAAyC;IACvCE,MAAM,CAACG,IAAP,CAAYR,IAAI,CAACS,MAAL,CAAYH,OAAO,CAACI,QAAR,CAAiBT,UAA7B,EAAyCC,IAAI,CAACS,SAA9C,CAAZ;EACD;AACF;;AAED,eAAeV,UAAf"},"metadata":{},"sourceType":"module"}