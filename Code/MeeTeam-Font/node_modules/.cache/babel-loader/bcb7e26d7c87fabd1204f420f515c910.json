{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\n\nvar _util = require('element-ui/lib/utils/util');\n/**\n * Show migrating guide in browser console.\n *\n * Usage:\n * import Migrating from 'element-ui/src/mixins/migrating';\n *\n * mixins: [Migrating]\n *\n * add getMigratingConfig method for your component.\n *  getMigratingConfig() {\n *    return {\n *      props: {\n *        'allow-no-selection': 'allow-no-selection is removed.',\n *        'selection-mode': 'selection-mode is removed.'\n *      },\n *      events: {\n *        selectionchange: 'selectionchange is renamed to selection-change.'\n *      }\n *    };\n *  },\n */\n\n\nexports.default = {\n  mounted: function mounted() {\n    if (process.env.NODE_ENV === 'production') return;\n    if (!this.$vnode) return;\n\n    var _getMigratingConfig = this.getMigratingConfig(),\n        _getMigratingConfig$p = _getMigratingConfig.props,\n        props = _getMigratingConfig$p === undefined ? {} : _getMigratingConfig$p,\n        _getMigratingConfig$e = _getMigratingConfig.events,\n        events = _getMigratingConfig$e === undefined ? {} : _getMigratingConfig$e;\n\n    var _$vnode = this.$vnode,\n        data = _$vnode.data,\n        componentOptions = _$vnode.componentOptions;\n    var definedProps = data.attrs || {};\n    var definedEvents = componentOptions.listeners || {};\n\n    for (var propName in definedProps) {\n      propName = (0, _util.kebabCase)(propName); // compatible with camel case\n\n      if (props[propName]) {\n        console.warn('[Element Migrating][' + this.$options.name + '][Attribute]: ' + props[propName]);\n      }\n    }\n\n    for (var eventName in definedEvents) {\n      eventName = (0, _util.kebabCase)(eventName); // compatible with camel case\n\n      if (events[eventName]) {\n        console.warn('[Element Migrating][' + this.$options.name + '][Event]: ' + events[eventName]);\n      }\n    }\n  },\n  methods: {\n    getMigratingConfig: function getMigratingConfig() {\n      return {\n        props: {},\n        events: {}\n      };\n    }\n  }\n};","map":{"version":3,"names":["exports","__esModule","_util","require","default","mounted","process","env","NODE_ENV","$vnode","_getMigratingConfig","getMigratingConfig","_getMigratingConfig$p","props","undefined","_getMigratingConfig$e","events","_$vnode","data","componentOptions","definedProps","attrs","definedEvents","listeners","propName","kebabCase","console","warn","$options","name","eventName","methods"],"sources":["C:/Users/中野/Desktop/2020_database_course_design/Code/MeeTeam-Font/node_modules/element-ui/lib/mixins/migrating.js"],"sourcesContent":["'use strict';\n\nexports.__esModule = true;\n\nvar _util = require('element-ui/lib/utils/util');\n\n/**\n * Show migrating guide in browser console.\n *\n * Usage:\n * import Migrating from 'element-ui/src/mixins/migrating';\n *\n * mixins: [Migrating]\n *\n * add getMigratingConfig method for your component.\n *  getMigratingConfig() {\n *    return {\n *      props: {\n *        'allow-no-selection': 'allow-no-selection is removed.',\n *        'selection-mode': 'selection-mode is removed.'\n *      },\n *      events: {\n *        selectionchange: 'selectionchange is renamed to selection-change.'\n *      }\n *    };\n *  },\n */\nexports.default = {\n  mounted: function mounted() {\n    if (process.env.NODE_ENV === 'production') return;\n    if (!this.$vnode) return;\n\n    var _getMigratingConfig = this.getMigratingConfig(),\n        _getMigratingConfig$p = _getMigratingConfig.props,\n        props = _getMigratingConfig$p === undefined ? {} : _getMigratingConfig$p,\n        _getMigratingConfig$e = _getMigratingConfig.events,\n        events = _getMigratingConfig$e === undefined ? {} : _getMigratingConfig$e;\n\n    var _$vnode = this.$vnode,\n        data = _$vnode.data,\n        componentOptions = _$vnode.componentOptions;\n\n    var definedProps = data.attrs || {};\n    var definedEvents = componentOptions.listeners || {};\n\n    for (var propName in definedProps) {\n      propName = (0, _util.kebabCase)(propName); // compatible with camel case\n      if (props[propName]) {\n        console.warn('[Element Migrating][' + this.$options.name + '][Attribute]: ' + props[propName]);\n      }\n    }\n\n    for (var eventName in definedEvents) {\n      eventName = (0, _util.kebabCase)(eventName); // compatible with camel case\n      if (events[eventName]) {\n        console.warn('[Element Migrating][' + this.$options.name + '][Event]: ' + events[eventName]);\n      }\n    }\n  },\n\n  methods: {\n    getMigratingConfig: function getMigratingConfig() {\n      return {\n        props: {},\n        events: {}\n      };\n    }\n  }\n};"],"mappings":"AAAA;;AAEAA,OAAO,CAACC,UAAR,GAAqB,IAArB;;AAEA,IAAIC,KAAK,GAAGC,OAAO,CAAC,2BAAD,CAAnB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAH,OAAO,CAACI,OAAR,GAAkB;EAChBC,OAAO,EAAE,SAASA,OAAT,GAAmB;IAC1B,IAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;IAC3C,IAAI,CAAC,KAAKC,MAAV,EAAkB;;IAElB,IAAIC,mBAAmB,GAAG,KAAKC,kBAAL,EAA1B;IAAA,IACIC,qBAAqB,GAAGF,mBAAmB,CAACG,KADhD;IAAA,IAEIA,KAAK,GAAGD,qBAAqB,KAAKE,SAA1B,GAAsC,EAAtC,GAA2CF,qBAFvD;IAAA,IAGIG,qBAAqB,GAAGL,mBAAmB,CAACM,MAHhD;IAAA,IAIIA,MAAM,GAAGD,qBAAqB,KAAKD,SAA1B,GAAsC,EAAtC,GAA2CC,qBAJxD;;IAMA,IAAIE,OAAO,GAAG,KAAKR,MAAnB;IAAA,IACIS,IAAI,GAAGD,OAAO,CAACC,IADnB;IAAA,IAEIC,gBAAgB,GAAGF,OAAO,CAACE,gBAF/B;IAIA,IAAIC,YAAY,GAAGF,IAAI,CAACG,KAAL,IAAc,EAAjC;IACA,IAAIC,aAAa,GAAGH,gBAAgB,CAACI,SAAjB,IAA8B,EAAlD;;IAEA,KAAK,IAAIC,QAAT,IAAqBJ,YAArB,EAAmC;MACjCI,QAAQ,GAAG,CAAC,GAAGtB,KAAK,CAACuB,SAAV,EAAqBD,QAArB,CAAX,CADiC,CACU;;MAC3C,IAAIX,KAAK,CAACW,QAAD,CAAT,EAAqB;QACnBE,OAAO,CAACC,IAAR,CAAa,yBAAyB,KAAKC,QAAL,CAAcC,IAAvC,GAA8C,gBAA9C,GAAiEhB,KAAK,CAACW,QAAD,CAAnF;MACD;IACF;;IAED,KAAK,IAAIM,SAAT,IAAsBR,aAAtB,EAAqC;MACnCQ,SAAS,GAAG,CAAC,GAAG5B,KAAK,CAACuB,SAAV,EAAqBK,SAArB,CAAZ,CADmC,CACU;;MAC7C,IAAId,MAAM,CAACc,SAAD,CAAV,EAAuB;QACrBJ,OAAO,CAACC,IAAR,CAAa,yBAAyB,KAAKC,QAAL,CAAcC,IAAvC,GAA8C,YAA9C,GAA6Db,MAAM,CAACc,SAAD,CAAhF;MACD;IACF;EACF,CA/Be;EAiChBC,OAAO,EAAE;IACPpB,kBAAkB,EAAE,SAASA,kBAAT,GAA8B;MAChD,OAAO;QACLE,KAAK,EAAE,EADF;QAELG,MAAM,EAAE;MAFH,CAAP;IAID;EANM;AAjCO,CAAlB"},"metadata":{},"sourceType":"script"}